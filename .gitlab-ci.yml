image: gcc

build:
  stage: build
  # instead of calling g++ directly you can also use some build toolkit like make
  # install the necessary build tools when needed
  before_script:
    - apt update
    - apt -y install build-essential
    - apt -y install make libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev 
    # install gnu parallel
    - apt-get -y install wget
    - cd ..
    - wget http://ftp.gnu.org/gnu/parallel/parallel-latest.tar.bz2
    - tar xjf parallel-latest.tar.bz2
    - cd parallel-2021????
    - ./configure && make
    - make install
    - cd ..
    - cd speedb
    #- git branch -a
    #- git checkout origin/master
  script:
    - stdbuf -i0 -o0 -e0 make J=1 -j 32 check
  timeout: 3 hours
  # artifacts:
  #  paths:
  #    - mybinary
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
#stress-test:
  #stage: test
  #script:
  #  - stdbuf -i0 -o0 -e0 make -j 32 crash_test
  #timeout: 3 hours
